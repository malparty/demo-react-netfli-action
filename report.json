{"numFailedTestSuites":3,"numFailedTests":2,"numPassedTestSuites":0,"numPassedTests":0,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":2,"numTodoTests":0,"numTotalTestSuites":3,"numTotalTests":2,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1649064664570,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Cypress"],"failureMessages":["TypeError: Cannot read property 'equal' of undefined\n    at Object.<anonymous> (/Users/xavier/Documents/Source/Sandbox/asasa/cypress/integration/init.spec.ts:3:5)\n    at Promise.then.completed (/Users/xavier/Documents/Source/Sandbox/asasa/node_modules/jest-circus/build/utils.js:391:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/xavier/Documents/Source/Sandbox/asasa/node_modules/jest-circus/build/utils.js:316:10)\n    at _callCircusTest (/Users/xavier/Documents/Source/Sandbox/asasa/node_modules/jest-circus/build/run.js:218:40)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at _runTest (/Users/xavier/Documents/Source/Sandbox/asasa/node_modules/jest-circus/build/run.js:155:3)\n    at _runTestsForDescribeBlock (/Users/xavier/Documents/Source/Sandbox/asasa/node_modules/jest-circus/build/run.js:66:9)\n    at _runTestsForDescribeBlock (/Users/xavier/Documents/Source/Sandbox/asasa/node_modules/jest-circus/build/run.js:60:9)\n    at run (/Users/xavier/Documents/Source/Sandbox/asasa/node_modules/jest-circus/build/run.js:25:3)"],"fullName":"Cypress is working","location":{"column":3,"line":2},"status":"failed","title":"is working"},{"ancestorTitles":["Cypress"],"failureMessages":["ReferenceError: cy is not defined\n    at Object.<anonymous> (/Users/xavier/Documents/Source/Sandbox/asasa/cypress/integration/init.spec.ts:7:5)\n    at Promise.then.completed (/Users/xavier/Documents/Source/Sandbox/asasa/node_modules/jest-circus/build/utils.js:391:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/xavier/Documents/Source/Sandbox/asasa/node_modules/jest-circus/build/utils.js:316:10)\n    at _callCircusTest (/Users/xavier/Documents/Source/Sandbox/asasa/node_modules/jest-circus/build/run.js:218:40)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at _runTest (/Users/xavier/Documents/Source/Sandbox/asasa/node_modules/jest-circus/build/run.js:155:3)\n    at _runTestsForDescribeBlock (/Users/xavier/Documents/Source/Sandbox/asasa/node_modules/jest-circus/build/run.js:66:9)\n    at _runTestsForDescribeBlock (/Users/xavier/Documents/Source/Sandbox/asasa/node_modules/jest-circus/build/run.js:60:9)\n    at run (/Users/xavier/Documents/Source/Sandbox/asasa/node_modules/jest-circus/build/run.js:25:3)"],"fullName":"Cypress visits the app","location":{"column":3,"line":6},"status":"failed","title":"visits the app"}],"endTime":1649064664915,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCypress › is working\u001b[39m\u001b[22m\n\n    TypeError: Cannot read property 'equal' of undefined\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 1 |\u001b[39m describe(\u001b[32m'Cypress'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 2 |\u001b[39m   it(\u001b[32m'is working'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 3 |\u001b[39m     expect(\u001b[36mtrue\u001b[39m)\u001b[33m.\u001b[39mto\u001b[33m.\u001b[39mequal(\u001b[36mtrue\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m   |\u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 4 |\u001b[39m   })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 5 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 6 |\u001b[39m   it(\u001b[32m'visits the app'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mcypress/integration/init.spec.ts\u001b[39m\u001b[0m\u001b[2m:3:5)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCypress › visits the app\u001b[39m\u001b[22m\n\n    ReferenceError: cy is not defined\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  5 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  6 |\u001b[39m   it(\u001b[32m'visits the app'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  7 |\u001b[39m     cy\u001b[33m.\u001b[39mvisit(\u001b[32m'/'\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  8 |\u001b[39m     cy\u001b[33m.\u001b[39mfindByTestId(\u001b[32m'app-link'\u001b[39m)\u001b[33m.\u001b[39mshould(\u001b[32m'be.visible'\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m   })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 10 |\u001b[39m })\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mcypress/integration/init.spec.ts\u001b[39m\u001b[0m\u001b[2m:7:5)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/xavier/Documents/Source/Sandbox/asasa/cypress/integration/init.spec.ts","startTime":1649064664612,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1649064666023,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    /Users/xavier/Documents/Source/Sandbox/asasa/src/lib/requestManager.test.ts:14\n    import axios from 'axios';\n    ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      \u001b[2mat Runtime.createScriptFromCode (\u001b[22mnode_modules/jest-runtime/build/index.js\u001b[2m:1728:14)\u001b[22m\n","name":"/Users/xavier/Documents/Source/Sandbox/asasa/src/lib/requestManager.test.ts","startTime":1649064666023,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1649064666023,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: /Users/xavier/Documents/Source/Sandbox/asasa/src/App.test.tsx: Support for the experimental syntax 'jsx' isn't currently enabled (9:12):\n\n    \u001b[0m \u001b[90m  7 |\u001b[39m describe(\u001b[32m'App'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m  8 |\u001b[39m   it(\u001b[32m'renders learn react link'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 |\u001b[39m     render(\u001b[33m<\u001b[39m\u001b[33mApp\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[0m\n    \u001b[0m \u001b[90m    |\u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 10 |\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 11 |\u001b[39m     \u001b[36mconst\u001b[39m linkElement \u001b[33m=\u001b[39m screen\u001b[33m.\u001b[39mgetByTestId(\u001b[32m'app-link'\u001b[39m)\u001b[0m\n    \u001b[0m \u001b[90m 12 |\u001b[39m\u001b[0m\n\n    Add @babel/preset-react (https://git.io/JfeDR) to the 'presets' section of your Babel config to enable transformation.\n    If you want to leave it as-is, add @babel/plugin-syntax-jsx (https://git.io/vb4yA) to the 'plugins' section to enable parsing.\n\n      \u001b[2mat instantiate (\u001b[22mnode_modules/@babel/parser/src/parse-error/credentials.js\u001b[2m:61:22)\u001b[22m\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.js\u001b[2m:58:12)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.js\u001b[2m:1763:19)\u001b[22m\n      \u001b[2mat Parser.expectOnePlugin (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.js\u001b[2m:1827:18)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:1238:16)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:683:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:662:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:631:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:383:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:393:23)\u001b[22m\n","name":"/Users/xavier/Documents/Source/Sandbox/asasa/src/App.test.tsx","startTime":1649064666023,"status":"failed","summary":""}],"wasInterrupted":false,"coverageMap":{"/Users/xavier/Documents/Source/Sandbox/asasa/src/setupTests.ts":{"path":"/Users/xavier/Documents/Source/Sandbox/asasa/src/setupTests.ts","statementMap":{"0":{"start":{"line":8,"column":0},"end":{"line":10,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":0},"f":{},"b":{}}}}